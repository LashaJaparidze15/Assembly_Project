00001006 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 28/02/2025 16:36:04

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Surviving the Jungle
00000000                             3  * Written by : Lasha Japaridze
00000000                             4  * Student ID: C00303432
00000000                             5  * Date: February 28th
00000000                             6  * Description: Surviving the Jungle is a text 
00000000                             7  * based game where player starts with full health and energy
00000000                             8  * with the objective to obtain influence(power) in the jungle
00000000                             9  * and become the ruler of the jungle
00000000                            10  * through various choices player can make friends with animals, which
00000000                            11  * increases power, or fight them and get injured. also they can find 
00000000                            12  * various good and harmful food, sleep to regenerate energy, fight 
00000000                            13  * rival packs
00000000                            14  *-----------------------------------------------------------
00001000                            15      ORG $1000
00001000                            16  *-----------------------------------------------------------
00001000                            17  * VALIDATION VALUES TO BE USED
00001000                            18  *-----------------------------------------------------------
00001000  =00000000                 19  EXIT        EQU 0           ; USED TO EXIT ASSEMBLY PROGRAM
00001000  =00000064                 20  INIT_HEALTH EQU 100         ; INITIAL HEALTH (DEFAULT)
00001000  =00000064                 21  INIT_ENERGY EQU 100         ; INITIAL ENERGY (DEFAULT)
00001000  =00000000                 22  INIT_POWER  EQU 0           ; INITIAL POWER (START AT 0)
00001000                            23  
00001000                            24  *-----------------------------------------------------------
00001000                            25  * GAME VARIABLES
00001000                            26  *-----------------------------------------------------------
00001000                            27  HEALTH      DS.W    1       ; PLAYER'S HEALTH
00001002                            28  ENERGY      DS.W    1       ; PLAYER'S ENERGY
00001004                            29  POWER       DS.W    1       ; PLAYER'S POWER
00001006                            30  
00001006                            31  *-----------------------------------------------------------
00001006                            32  * START OF GAME
00001006                            33  *-----------------------------------------------------------
00001006                            34  START:
00001006  6100 000E                 35      BSR     INIT_GAME       ; INITIALIZE GAME VARIABLES
0000100A  6100 001E                 36      BSR     WELCOME         ; DISPLAY WELCOME MESSAGE
0000100E  6100 0030                 37      BSR     MAIN_LOOP       ; ENTER MAIN GAME LOOP
00001012  6000 07A6                 38      BRA     END             ; END GAME
00001016                            39  
00001016                            40  *-----------------------------------------------------------
00001016                            41  * INITIALIZE GAME VARIABLES
00001016                            42  *-----------------------------------------------------------
00001016                            43  INIT_GAME:
00001016  31FC 0064 1000            44      MOVE.W  #INIT_HEALTH,HEALTH  ; SET INITIAL HEALTH
0000101C  31FC 0064 1002            45      MOVE.W  #INIT_ENERGY,ENERGY  ; SET INITIAL ENERGY
00001022  31FC 0000 1004            46      MOVE.W  #INIT_POWER,POWER    ; SET INITIAL POWER (START AT 0)
00001028  4E75                      47      RTS
0000102A                            48  
0000102A                            49  *-----------------------------------------------------------
0000102A                            50  * WELCOME MESSAGE
0000102A                            51  *-----------------------------------------------------------
0000102A                            52  WELCOME:
0000102A  6100 031A                 53      BSR     ENDL            ; PRINT NEWLINE
0000102E  43F9 0000135C             54      LEA     WELCOME_MSG,A1  ; LOAD WELCOME MESSAGE
00001034  103C 000E                 55      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001038  4E4F                      56      TRAP    #15
0000103A  6100 030A                 57      BSR     ENDL            ; PRINT NEWLINE
0000103E  4E75                      58      RTS
00001040                            59  
00001040                            60  *-----------------------------------------------------------
00001040                            61  * MAIN GAME LOOP
00001040                            62  *-----------------------------------------------------------
00001040                            63  MAIN_LOOP:
00001040  6100 001A                 64      BSR     DISPLAY_STATS   ; DISPLAY PLAYER STATS
00001044  6100 006A                 65      BSR     DISPLAY_OPTIONS ; DISPLAY GAME OPTIONS
00001048  6100 0096                 66      BSR     GET_INPUT       ; GET PLAYER INPUT
0000104C  6100 00A6                 67      BSR     PROCESS_INPUT   ; PROCESS PLAYER INPUT
00001050  6100 0268                 68      BSR     UPDATE_STATS    ; UPDATE PLAYER STATS
00001054  6100 0296                 69      BSR     CHECK_GAME_OVER ; CHECK IF GAME IS OVER
00001058  66E6                      70      BNE     MAIN_LOOP       ; CONTINUE LOOP IF GAME NOT OVER
0000105A  4E75                      71      RTS
0000105C                            72  
0000105C                            73  *-----------------------------------------------------------
0000105C                            74  * DISPLAY PLAYER STATS
0000105C                            75  *-----------------------------------------------------------
0000105C                            76  DISPLAY_STATS:
0000105C  6100 02E8                 77      BSR     ENDL            ; PRINT NEWLINE
00001060  43F9 0000142D             78      LEA     HEALTH_MSG,A1   ; LOAD HEALTH MESSAGE
00001066  103C 000E                 79      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000106A  4E4F                      80      TRAP    #15
0000106C  3238 1000                 81      MOVE.W  HEALTH,D1       ; LOAD HEALTH VALUE
00001070  103C 0003                 82      MOVE.B  #3,D0           ; PRINT VALUE (TRAP #15)
00001074  4E4F                      83      TRAP    #15
00001076  6100 02CE                 84      BSR     ENDL            ; PRINT NEWLINE
0000107A                            85  
0000107A  43F9 00001436             86      LEA     ENERGY_MSG,A1   ; LOAD ENERGY MESSAGE
00001080  103C 000E                 87      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001084  4E4F                      88      TRAP    #15
00001086  3238 1002                 89      MOVE.W  ENERGY,D1       ; LOAD ENERGY VALUE
0000108A  103C 0003                 90      MOVE.B  #3,D0           ; PRINT VALUE (TRAP #15)
0000108E  4E4F                      91      TRAP    #15
00001090  6100 02B4                 92      BSR     ENDL            ; PRINT NEWLINE
00001094                            93  
00001094  43F9 0000143F             94      LEA     POWER_MSG,A1    ; LOAD POWER MESSAGE
0000109A  103C 000E                 95      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000109E  4E4F                      96      TRAP    #15
000010A0  3238 1004                 97      MOVE.W  POWER,D1        ; LOAD POWER VALUE
000010A4  103C 0003                 98      MOVE.B  #3,D0           ; PRINT VALUE (TRAP #15)
000010A8  4E4F                      99      TRAP    #15
000010AA  6100 029A                100      BSR     ENDL            ; PRINT NEWLINE
000010AE  4E75                     101      RTS
000010B0                           102  
000010B0                           103  *-----------------------------------------------------------
000010B0                           104  * DISPLAY GAME OPTIONS
000010B0                           105  *-----------------------------------------------------------
000010B0                           106  DISPLAY_OPTIONS:
000010B0  6100 0294                107      BSR     ENDL            ; PRINT NEWLINE
000010B4  43F9 00001447            108      LEA     OPTIONS_MSG,A1  ; LOAD OPTIONS MESSAGE
000010BA  103C 000E                109      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000010BE  4E4F                     110      TRAP    #15
000010C0  6100 0284                111      BSR     ENDL            ; PRINT NEWLINE
000010C4                           112  
000010C4                           113      ; CHECK IF PLAYER HAS A PACK (POWER > 0)
000010C4  0C78 0000 1004           114      CMP.W   #0,POWER        ; CHECK IF POWER > 0
000010CA  6F00 0012                115      BLE     NO_PACK         ; IF NOT, SKIP NEW OPTION
000010CE                           116  
000010CE                           117      ; DISPLAY NEW OPTION
000010CE  43F9 000016FE            118      LEA     FIGHT_PACK_OPTION,A1 ; LOAD FIGHT PACK OPTION MESSAGE
000010D4  103C 000E                119      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000010D8  4E4F                     120      TRAP    #15
000010DA  6100 026A                121      BSR     ENDL            ; PRINT NEWLINE
000010DE                           122  
000010DE                           123  NO_PACK:
000010DE  4E75                     124      RTS
000010E0                           125  
000010E0                           126  *-----------------------------------------------------------
000010E0                           127  * GET PLAYER INPUT
000010E0                           128  *-----------------------------------------------------------
000010E0                           129  GET_INPUT:
000010E0  43F9 0000148A            130      LEA     INPUT_MSG,A1    ; LOAD INPUT MESSAGE
000010E6  103C 000E                131      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000010EA  4E4F                     132      TRAP    #15
000010EC  103C 0004                133      MOVE.B  #4,D0           ; READ INPUT (TRAP #15)
000010F0  4E4F                     134      TRAP    #15
000010F2  4E75                     135      RTS
000010F4                           136  
000010F4                           137  *-----------------------------------------------------------
000010F4                           138  * PROCESS PLAYER INPUT
000010F4                           139  *-----------------------------------------------------------
000010F4                           140  PROCESS_INPUT:
000010F4  B23C 0001                141      CMP.B   #1,D1           ; CHECK IF INPUT IS 1 (EXPLORE)
000010F8  6700 001E                142      BEQ     EXPLORE         ; BRANCH TO EXPLORE
000010FC  B23C 0002                143      CMP.B   #2,D1           ; CHECK IF INPUT IS 2 (SLEEP)
00001100  6700 001C                144      BEQ     SLEEP           ; BRANCH TO SLEEP
00001104  B23C 0003                145      CMP.B   #3,D1           ; CHECK IF INPUT IS 3 (FIND FOOD)
00001108  6700 001A                146      BEQ     FIND_FOOD       ; BRANCH TO FIND_FOOD
0000110C  B23C 0004                147      CMP.B   #4,D1           ; CHECK IF INPUT IS 4 (FIGHT RIVALING PACKS)
00001110  6700 0136                148      BEQ     FIGHT_PACKS     ; BRANCH TO FIGHT_PACKS
00001114  6000 0014                149      BRA     INVALID_INPUT   ; BRANCH TO INVALID_INPUT
00001118                           150  
00001118                           151  EXPLORE:
00001118  6100 001E                152      BSR     EXPLORE_JUNGLE  ; CALL EXPLORE JUNGLE SUBROUTINE
0000111C  4E75                     153      RTS
0000111E                           154  
0000111E                           155  SLEEP:
0000111E  6100 0098                156      BSR     SLEEP_SUB       ; CALL SLEEP SUBROUTINE
00001122  4E75                     157      RTS
00001124                           158  
00001124                           159  FIND_FOOD:
00001124  6100 00AA                160      BSR     FIND_FOOD_SUB   ; CALL FIND FOOD SUBROUTINE
00001128  4E75                     161      RTS
0000112A                           162  
0000112A                           163  INVALID_INPUT:
0000112A  43F9 000014A4            164      LEA     INVALID_MSG,A1  ; LOAD INVALID INPUT MESSAGE
00001130  103C 000E                165      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001134  4E4F                     166      TRAP    #15
00001136  4E75                     167      RTS
00001138                           168  
00001138                           169  *-----------------------------------------------------------
00001138                           170  * EXPLORE JUNGLE
00001138                           171  *-----------------------------------------------------------
00001138                           172  EXPLORE_JUNGLE:
00001138  43F9 000014C1            173      LEA     EXPLORE_MSG,A1  ; LOAD EXPLORE MESSAGE
0000113E  103C 000E                174      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001142  4E4F                     175      TRAP    #15
00001144  6100 0200                176      BSR     ENDL            ; PRINT NEWLINE
00001148                           177  
00001148                           178      ; PROMPT PLAYER TO ENTER A NUMBER BETWEEN 1 AND 100
00001148  43F9 000014E2            179      LEA     ENTER_NUMBER_MSG,A1 ; LOAD ENTER NUMBER MESSAGE
0000114E  103C 000E                180      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001152  4E4F                     181      TRAP    #15
00001154  103C 0004                182      MOVE.B  #4,D0           ; READ INPUT (TRAP #15)
00001158  4E4F                     183      TRAP    #15
0000115A                           184  
0000115A                           185      ; CHECK IF NUMBER IS BETWEEN 1 AND 100
0000115A  B23C 0001                186      CMP.B   #1,D1           ; CHECK IF INPUT >= 1
0000115E  6D00 004A                187      BLT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
00001162  B23C 0064                188      CMP.B   #100,D1         ; CHECK IF INPUT <= 100
00001166  6E00 0042                189      BGT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
0000116A                           190  
0000116A                           191      ; CHECK IF NUMBER IS EVEN OR ODD
0000116A  C23C 0001                192      AND.B   #1,D1           ; CHECK LSB (IF 0, EVEN; IF 1, ODD)
0000116E  6700 0006                193      BEQ     EVEN_NUMBER     ; BRANCH TO EVEN_NUMBER IF EVEN
00001172  6000 001C                194      BRA     ODD_NUMBER      ; BRANCH TO ODD_NUMBER IF ODD
00001176                           195  
00001176                           196  EVEN_NUMBER:
00001176  43F9 00001505            197      LEA     EVEN_MSG,A1     ; LOAD EVEN NUMBER MESSAGE
0000117C  103C 000E                198      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001180  4E4F                     199      TRAP    #15
00001182  0678 000A 1004           200      ADD.W   #10,POWER       ; INCREASE POWER BY 10
00001188  0478 000A 1002           201      SUB.W   #10,ENERGY      ; DECREASE ENERGY BY 10 (DEFAULT FOR EXPLORATION)
0000118E  4E75                     202      RTS
00001190                           203  
00001190                           204  ODD_NUMBER:
00001190  43F9 00001557            205      LEA     ODD_MSG,A1      ; LOAD ODD NUMBER MESSAGE
00001196  103C 000E                206      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000119A  4E4F                     207      TRAP    #15
0000119C  0478 0014 1000           208      SUB.W   #20,HEALTH      ; DECREASE HEALTH BY 20
000011A2  0478 000F 1002           209      SUB.W   #15,ENERGY      ; DECREASE ENERGY BY 15 (FIGHT WITH ANIMALS)
000011A8  4E75                     210      RTS
000011AA                           211  
000011AA                           212  INVALID_NUMBER:
000011AA  43F9 0000158E            213      LEA     INVALID_NUMBER_MSG,A1 ; LOAD INVALID NUMBER MESSAGE
000011B0  103C 000E                214      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000011B4  4E4F                     215      TRAP    #15
000011B6  4E75                     216      RTS
000011B8                           217  
000011B8                           218  *-----------------------------------------------------------
000011B8                           219  * SLEEP
000011B8                           220  *-----------------------------------------------------------
000011B8                           221  SLEEP_SUB:
000011B8  43F9 000015C9            222      LEA     SLEEP_MSG,A1    ; LOAD SLEEP MESSAGE
000011BE  103C 000E                223      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000011C2  4E4F                     224      TRAP    #15
000011C4  6100 0180                225      BSR     ENDL            ; PRINT NEWLINE
000011C8                           226  
000011C8                           227      ; REGENERATE ENERGY
000011C8  0678 0028 1002           228      ADD.W   #40,ENERGY      ; INCREASE ENERGY BY 40
000011CE  4E75                     229      RTS
000011D0                           230  
000011D0                           231  *-----------------------------------------------------------
000011D0                           232  * FIND FOOD
000011D0                           233  *-----------------------------------------------------------
000011D0                           234  FIND_FOOD_SUB:
000011D0  43F9 000015EE            235      LEA     FIND_FOOD_MSG,A1 ; LOAD FIND FOOD MESSAGE
000011D6  103C 000E                236      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000011DA  4E4F                     237      TRAP    #15
000011DC  6100 0168                238      BSR     ENDL            ; PRINT NEWLINE
000011E0                           239  
000011E0                           240      ; PROMPT PLAYER TO ENTER A NUMBER BETWEEN 1 AND 100
000011E0  43F9 000014E2            241      LEA     ENTER_NUMBER_MSG,A1 ; LOAD ENTER NUMBER MESSAGE
000011E6  103C 000E                242      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000011EA  4E4F                     243      TRAP    #15
000011EC  103C 0004                244      MOVE.B  #4,D0           ; READ INPUT (TRAP #15)
000011F0  4E4F                     245      TRAP    #15
000011F2                           246  
000011F2                           247      ; CHECK IF NUMBER IS BETWEEN 1 AND 100
000011F2  B23C 0001                248      CMP.B   #1,D1           ; CHECK IF INPUT >= 1
000011F6  6DB2                     249      BLT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
000011F8  B23C 0064                250      CMP.B   #100,D1         ; CHECK IF INPUT <= 100
000011FC  6EAC                     251      BGT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
000011FE                           252  
000011FE                           253      ; CHECK IF NUMBER IS EVEN OR ODD
000011FE  C23C 0001                254      AND.B   #1,D1           ; CHECK LSB (IF 0, EVEN; IF 1, ODD)
00001202  6700 0006                255      BEQ     GOOD_FOOD       ; BRANCH TO GOOD_FOOD IF EVEN
00001206  6000 0020                256      BRA     POISONOUS_FOOD  ; BRANCH TO POISONOUS_FOOD IF ODD
0000120A                           257  
0000120A                           258  GOOD_FOOD:
0000120A  43F9 00001607            259      LEA     GOOD_FOOD_MSG,A1 ; LOAD GOOD FOOD MESSAGE
00001210  103C 000E                260      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001214  4E4F                     261      TRAP    #15
00001216  0678 0014 1000           262      ADD.W   #20,HEALTH      ; INCREASE HEALTH BY 20
0000121C  0678 001E 1002           263      ADD.W   #30,ENERGY      ; INCREASE ENERGY BY 30
00001222  5B78 1002                264      SUB.W   #5,ENERGY       ; DECREASE ENERGY BY 5 (ENERGY LOST FOR FINDING GOOD FOOD)
00001226  4E75                     265      RTS
00001228                           266  
00001228                           267  POISONOUS_FOOD:
00001228  43F9 00001641            268      LEA     POISONOUS_FOOD_MSG,A1 ; LOAD POISONOUS FOOD MESSAGE
0000122E  103C 000E                269      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001232  4E4F                     270      TRAP    #15
00001234  0478 0014 1000           271      SUB.W   #20,HEALTH      ; DECREASE HEALTH BY 20
0000123A  0478 001E 1002           272      SUB.W   #30,ENERGY      ; DECREASE ENERGY BY 30
00001240  0478 000A 1002           273      SUB.W   #10,ENERGY      ; DECREASE ENERGY BY 10 (DEFAULT FOR SEARCHING)
00001246  4E75                     274      RTS
00001248                           275  
00001248                           276  *-----------------------------------------------------------
00001248                           277  * FIGHT RIVALING PACKS
00001248                           278  *-----------------------------------------------------------
00001248                           279  FIGHT_PACKS:
00001248  43F9 00001718            280      LEA     FIGHT_PACK_MSG,A1 ; LOAD FIGHT PACK MESSAGE
0000124E  103C 000E                281      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001252  4E4F                     282      TRAP    #15
00001254  6100 00F0                283      BSR     ENDL            ; PRINT NEWLINE
00001258                           284  
00001258                           285      ; PROMPT PLAYER TO ENTER A NUMBER BETWEEN 1 AND 100
00001258  43F9 000014E2            286      LEA     ENTER_NUMBER_MSG,A1 ; LOAD ENTER NUMBER MESSAGE
0000125E  103C 000E                287      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001262  4E4F                     288      TRAP    #15
00001264  103C 0004                289      MOVE.B  #4,D0           ; READ INPUT (TRAP #15)
00001268  4E4F                     290      TRAP    #15
0000126A                           291  
0000126A                           292      ; CHECK IF NUMBER IS BETWEEN 1 AND 100
0000126A  B23C 0001                293      CMP.B   #1,D1           ; CHECK IF INPUT >= 1
0000126E  6D00 FF3A                294      BLT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
00001272  B23C 0064                295      CMP.B   #100,D1         ; CHECK IF INPUT <= 100
00001276  6E00 FF32                296      BGT     INVALID_NUMBER  ; IF NOT, BRANCH TO INVALID_NUMBER
0000127A                           297  
0000127A                           298      ; CHECK IF NUMBER IS EVEN OR ODD
0000127A  C23C 0001                299      AND.B   #1,D1           ; CHECK LSB (IF 0, EVEN; IF 1, ODD)
0000127E  6700 0006                300      BEQ     WIN_FIGHT       ; BRANCH TO WIN_FIGHT IF EVEN
00001282  6000 0016                301      BRA     LOSE_FIGHT      ; BRANCH TO LOSE_FIGHT IF ODD
00001286                           302  
00001286                           303  WIN_FIGHT:
00001286  43F9 0000173B            304      LEA     WIN_FIGHT_MSG,A1 ; LOAD WIN FIGHT MESSAGE
0000128C  103C 000E                305      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
00001290  4E4F                     306      TRAP    #15
00001292  0678 001E 1004           307      ADD.W   #30,POWER       ; INCREASE POWER BY 30 (RECRUIT LOSER PACK)
00001298  4E75                     308      RTS
0000129A                           309  
0000129A                           310  LOSE_FIGHT:
0000129A  43F9 0000177C            311      LEA     LOSE_FIGHT_MSG,A1 ; LOAD LOSE FIGHT MESSAGE
000012A0  103C 000E                312      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
000012A4  4E4F                     313      TRAP    #15
000012A6  0478 000F 1000           314      SUB.W   #15,HEALTH      ; DECREASE HEALTH BY 15
000012AC  0478 000F 1002           315      SUB.W   #15,ENERGY      ; DECREASE ENERGY BY 15
000012B2  0478 000F 1004           316      SUB.W   #15,POWER       ; DECREASE POWER BY 15
000012B8  4E75                     317      RTS
000012BA                           318  
000012BA                           319  *-----------------------------------------------------------
000012BA                           320  * UPDATE PLAYER STATS
000012BA                           321  *-----------------------------------------------------------
000012BA                           322  UPDATE_STATS:
000012BA                           323      ; ENSURE STATS DO NOT GO BELOW ZERO
000012BA  0C78 0000 1000           324      CMP.W   #0,HEALTH       ; CHECK IF HEALTH < 0
000012C0  6C00 0008                325      BGE     CHECK_ENERGY    ; IF NOT, CHECK ENERGY
000012C4  31FC 0000 1000           326      MOVE.W  #0,HEALTH       ; SET HEALTH TO 0
000012CA                           327  
000012CA                           328  CHECK_ENERGY:
000012CA  0C78 0000 1002           329      CMP.W   #0,ENERGY       ; CHECK IF ENERGY < 0
000012D0  6C00 0008                330      BGE     CHECK_POWER     ; IF NOT, CHECK POWER
000012D4  31FC 0000 1002           331      MOVE.W  #0,ENERGY       ; SET ENERGY TO 0
000012DA                           332  
000012DA                           333  CHECK_POWER:
000012DA  0C78 0000 1004           334      CMP.W   #0,POWER        ; CHECK IF POWER < 0
000012E0  6C00 0008                335      BGE     UPDATE_END      ; IF NOT, END UPDATE
000012E4  31FC 0000 1004           336      MOVE.W  #0,POWER        ; SET POWER TO 0
000012EA                           337  
000012EA                           338  UPDATE_END:
000012EA  4E75                     339      RTS
000012EC                           340  
000012EC                           341  *-----------------------------------------------------------
000012EC                           342  * CHECK IF GAME IS OVER
000012EC                           343  *-----------------------------------------------------------
000012EC                           344  CHECK_GAME_OVER:
000012EC  0C78 0000 1000           345      CMP.W   #0,HEALTH       ; CHECK IF HEALTH == 0
000012F2  6700 001C                346      BEQ     GAME_OVER_HEALTH ; IF YES, GAME OVER (HEALTH)
000012F6  0C78 0000 1002           347      CMP.W   #0,ENERGY       ; CHECK IF ENERGY == 0
000012FC  6700 0024                348      BEQ     GAME_OVER_ENERGY ; IF YES, GAME OVER (ENERGY)
00001300  0C78 0064 1004           349      CMP.W   #100,POWER      ; CHECK IF POWER >= 100 (WIN CONDITION)
00001306  6C00 002C                350      BGE     WIN_GAME        ; IF YES, WIN THE GAME
0000130A  103C 0001                351      MOVE.B  #1,D0           ; GAME NOT OVER
0000130E  4E75                     352      RTS
00001310                           353  
00001310                           354  GAME_OVER_HEALTH:
00001310  43F9 0000167D            355      LEA     GAME_OVER_HEALTH_MSG,A1 ; LOAD GAME OVER (HEALTH) MESSAGE
00001316  103C 000E                356      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000131A  4E4F                     357      TRAP    #15
0000131C  103C 0000                358      MOVE.B  #0,D0           ; GAME OVER
00001320  4E75                     359      RTS
00001322                           360  
00001322                           361  GAME_OVER_ENERGY:
00001322  43F9 00001694            362      LEA     GAME_OVER_ENERGY_MSG,A1 ; LOAD GAME OVER (ENERGY) MESSAGE
00001328  103C 000E                363      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000132C  4E4F                     364      TRAP    #15
0000132E  103C 0000                365      MOVE.B  #0,D0           ; GAME OVER
00001332  4E75                     366      RTS
00001334                           367  
00001334                           368  WIN_GAME:
00001334  43F9 000016B8            369      LEA     WIN_MSG,A1      ; LOAD WIN MESSAGE
0000133A  103C 000E                370      MOVE.B  #14,D0          ; PRINT MESSAGE (TRAP #15)
0000133E  4E4F                     371      TRAP    #15
00001340  103C 0000                372      MOVE.B  #0,D0           ; GAME OVER (WIN)
00001344  4E75                     373      RTS
00001346                           374  
00001346                           375  *-----------------------------------------------------------
00001346                           376  * ENDL SUBROUTINE (PRINT NEWLINE)
00001346                           377  *-----------------------------------------------------------
00001346                           378  ENDL:
00001346  48E7 8040                379      MOVEM.L D0/A1,-(A7)     ; SAVE D0 AND A1
0000134A  303C 000E                380      MOVE    #14,D0          ; MOVE LITERAL 14 TO DO
0000134E  43F9 000016FB            381      LEA     CRLF,A1         ; ASSIGN CRLF TO ADDRESS REGISTER A1
00001354  4E4F                     382      TRAP    #15             ; TRAP AND INTERPRET VALUE IN D0
00001356  4CDF 0201                383      MOVEM.L (A7)+,D0/A1     ; RESTORE D0 AND A1
0000135A  4E75                     384      RTS                     ; RETURN FROM ENDL: SUBROUTINE
0000135C                           385  
0000135C                           386  *-----------------------------------------------------------
0000135C                           387  * DATA DECLARATIONS
0000135C                           388  *-----------------------------------------------------------
0000135C                           389  WELCOME_MSG:        
0000135C= 57 45 4C 43 4F 4D ...    390      DC.B    'WELCOME TO SURVIVING THE JUNGLE!', $0D, $0A
0000137E= 45 58 50 4C 4F 52 ...    391      DC.B    'EXPLORE THE JUNGLE, MAKE FRIENDS,', $0D, $0A
000013A1= 42 55 54 20 42 45 ...    392      DC.B    'BUT BE CAREFUL ABOUT THE UNFRIENDLY ANIMALS.', $0D, $0A
000013CF= 46 49 4E 44 20 46 ...    393      DC.B    'FIND FOOD, BUT THINK TWICE BEFORE EATING.', $0D, $0A
000013FA= 53 4C 45 45 50 20 ...    394      DC.B    'SLEEP TO REGAIN ENERGY.', $0D, $0A
00001413= 59 4F 55 52 20 4A ...    395      DC.B    'YOUR JOURNEY BEGINS!', $0D, $0A, 0, $0D, $0A, 0
0000142D= 48 45 41 4C 54 48 ...    396  HEALTH_MSG:         DC.B    'HEALTH: ', 0
00001436= 45 4E 45 52 47 59 ...    397  ENERGY_MSG:         DC.B    'ENERGY: ', 0   
0000143F= 50 4F 57 45 52 3A ...    398  POWER_MSG:          DC.B    'POWER: ', 0
00001447= 43 48 4F 4F 53 45 ...    399  OPTIONS_MSG:        DC.B    'CHOOSE AN ACTION:',$0D, $0A,'1. EXPLORE THE JUNGLE',$0D, $0A,'2. SLEEP',$0D, $0A,'3. FIND FOOD',$0D, $0A, 0
0000148A= 45 4E 54 45 52 20 ...    400  INPUT_MSG:          DC.B    'ENTER YOUR CHOICE (1-3): ', 0  
000014A4= 49 4E 56 41 4C 49 ...    401  INVALID_MSG:        DC.B    'INVALID CHOICE! TRY AGAIN.', $0D, $0A, 0
000014C1= 59 4F 55 20 56 45 ...    402  EXPLORE_MSG:        DC.B    'YOU VENTURE INTO THE JUNGLE...', $0D, $0A, 0
000014E2= 45 4E 54 45 52 20 ...    403  ENTER_NUMBER_MSG:   DC.B    'ENTER A NUMBER BETWEEN 1 AND 100: ', 0
00001505= 59 4F 55 20 4D 41 ...    404  EVEN_MSG:           DC.B    'YOU MADE FRIENDS WITH A GROUP OF ANIMALS, NOW YOU HAVE A PACK! POWER INCREASED.', $0D, $0A, 0
00001557= 59 4F 55 20 47 4F ...    405  ODD_MSG:            DC.B    'YOU GOT INTO A FIGHT WITH ANIMALS! HEALTH DECREASED.', $0D, $0A, 0
0000158E= 49 4E 56 41 4C 49 ...    406  INVALID_NUMBER_MSG: DC.B    'INVALID NUMBER! PLEASE ENTER A NUMBER BETWEEN 1 AND 100.', $0D, $0A, 0
000015C9= 59 4F 55 20 53 4C ...    407  SLEEP_MSG:          DC.B    'YOU SLEEP AND REGENERATE ENERGY...', $0D, $0A, 0
000015EE= 59 4F 55 20 53 45 ...    408  FIND_FOOD_MSG:      DC.B    'YOU SEARCH FOR FOOD...', $0D, $0A, 0
00001607= 59 4F 55 20 46 4F ...    409  GOOD_FOOD_MSG:      DC.B    'YOU FOUND NUTRITIOUS FOOD! HEALTH AND ENERGY INCREASED.', $0D, $0A, 0
00001641= 59 4F 55 20 46 4F ...    410  POISONOUS_FOOD_MSG: DC.B    'YOU FOUND POISONOUS BERRIES! HEALTH AND ENERGY DECREASED.', $0D, $0A, 0
0000167D= 47 41 4D 45 20 4F ...    411  GAME_OVER_HEALTH_MSG: DC.B  'GAME OVER! YOU DIED.', $0D, $0A, 0
00001694= 47 41 4D 45 20 4F ...    412  GAME_OVER_ENERGY_MSG: DC.B  'GAME OVER! YOU RAN OUT OF ENERGY.', $0D, $0A, 0
000016B8= 59 4F 55 20 57 4F ...    413  WIN_MSG:            DC.B    'YOU WON! YOUR POWER REACHED 100, YOU ARE THE KING OF THE JUNGLE!', $0D, $0A, 0
000016FB= 0D 0A 00                 414  CRLF:               DC.B    $0D, $0A, 0 ; CARRIAGE RETURN AND LINE FEED FOR NEWLINE
000016FE                           415  
000016FE                           416  * MESSAGES FOR FIGHT RIVALING PACKS
000016FE= 34 2E 20 46 49 47 ...    417  FIGHT_PACK_OPTION:  DC.B    '4. FIGHT RIVALING PACKS', $0D, $0A, 0
00001718= 59 4F 55 20 45 4E ...    418  FIGHT_PACK_MSG:     DC.B    'YOU ENCOUNTER A RIVALING PACK...', $0D, $0A, 0
0000173B= 59 4F 55 20 57 49 ...    419  WIN_FIGHT_MSG:      DC.B    'YOU WIN THE FIGHT AND RECRUIT THE LOSER PACK! POWER INCREASED.', $0D, $0A, 0
0000177C= 59 4F 55 20 4C 4F ...    420  LOSE_FIGHT_MSG:     DC.B    'YOU LOSE THE FIGHT AND LOST YOUR PACK! ALL STATS DECREASED.', $0D, $0A, 0
000017BA                           421  
000017BA                           422  *-----------------------------------------------------------
000017BA                           423  * END OF GAME
000017BA                           424  *-----------------------------------------------------------
000017BA                           425  END:
000017BA  FFFF FFFF                426      SIMHALT
000017BE                           427      
000017BE                           428      END START 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CHECK_ENERGY        12CA
CHECK_GAME_OVER     12EC
CHECK_POWER         12DA
CRLF                16FB
DISPLAY_OPTIONS     10B0
DISPLAY_STATS       105C
END                 17BA
ENDL                1346
ENERGY              1002
ENERGY_MSG          1436
ENTER_NUMBER_MSG    14E2
EVEN_MSG            1505
EVEN_NUMBER         1176
EXIT                0
EXPLORE             1118
EXPLORE_JUNGLE      1138
EXPLORE_MSG         14C1
FIGHT_PACKS         1248
FIGHT_PACK_MSG      1718
FIGHT_PACK_OPTION   16FE
FIND_FOOD           1124
FIND_FOOD_MSG       15EE
FIND_FOOD_SUB       11D0
GAME_OVER_ENERGY    1322
GAME_OVER_ENERGY_MSG  1694
GAME_OVER_HEALTH    1310
GAME_OVER_HEALTH_MSG  167D
GET_INPUT           10E0
GOOD_FOOD           120A
GOOD_FOOD_MSG       1607
HEALTH              1000
HEALTH_MSG          142D
INIT_ENERGY         64
INIT_GAME           1016
INIT_HEALTH         64
INIT_POWER          0
INPUT_MSG           148A
INVALID_INPUT       112A
INVALID_MSG         14A4
INVALID_NUMBER      11AA
INVALID_NUMBER_MSG  158E
LOSE_FIGHT          129A
LOSE_FIGHT_MSG      177C
MAIN_LOOP           1040
NO_PACK             10DE
ODD_MSG             1557
ODD_NUMBER          1190
OPTIONS_MSG         1447
POISONOUS_FOOD      1228
POISONOUS_FOOD_MSG  1641
POWER               1004
POWER_MSG           143F
PROCESS_INPUT       10F4
SLEEP               111E
SLEEP_MSG           15C9
SLEEP_SUB           11B8
START               1006
UPDATE_END          12EA
UPDATE_STATS        12BA
WELCOME             102A
WELCOME_MSG         135C
WIN_FIGHT           1286
WIN_FIGHT_MSG       173B
WIN_GAME            1334
WIN_MSG             16B8
